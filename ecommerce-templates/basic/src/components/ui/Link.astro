---
interface Props {
  id: string;
  href: string;
  size?: "md" | "lg";
  block?: boolean;
  style?: "outline" | "primary" | "inverted" | "muted" | "orange";
  class?: string;
  textColor?: string;
  bgColor?: string;
  [x: string]: any;
}

const {
  id,
  href,
  block,
  size = "lg",
  style = "primary",
  class: className,
  textColor,
  bgColor,
  ...rest
} = Astro.props;

const sizes = {
  lg: "px-5 py-2.5",
  md: "px-4 py-2",
};

const styles = {
  outline: "bg-white border-2 border-black hover:bg-gray-100 text-black",
  primary: "bg-black text-white hover:bg-gray-800 border-2 border-transparent",
  orange: "bg-orange-500 text-black hover:bg-orange-600 border-2 border-transparent",
  inverted: "bg-white text-black border-2 border-transparent",
  muted: "bg-gray-100 hover:bg-gray-200 border-2 border-transparent",
};
---

<a
  href={href}
  id={id}
  {...rest}
  class:list={[
    "rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200",
    block && "w-full",
    sizes[size],
    styles[style],
    className,
  ]}
  style={{
    color: textColor || (style === "primary" ? "white" : "black"),
    backgroundColor: bgColor || (style === "primary" ? "black" : "transparent"),
  }}
>
  <slot />
</a>
